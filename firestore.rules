
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isOwner(ownerId) {
      return request.auth.uid == ownerId;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      return getUserRole() == 'admin';
    }
    
    function isHotelOwner() {
      return getUserRole() == 'owner';
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if isOwner(userId) && request.resource.data.keys().hasOnly(['name']);
      allow delete: if isOwner(userId) || isAdmin();
    }

    match /hotels/{hotelId} {
      allow read: if true;
      allow create: if isHotelOwner() && isOwner(request.resource.data.ownerId);
      allow update: if isOwner(resource.data.ownerId) || isAdmin();
      allow delete: if isOwner(resource.data.ownerId) || isAdmin();

      match /rooms/{roomId} {
        allow read: if true;
        allow create, update, delete: if isOwner(get(/databases/$(database)/documents/hotels/$(hotelId)).data.ownerId) || isAdmin();
      }

      match /menuItems/{menuItemId} {
        allow read: if true;
        allow create, update, delete: if isOwner(get(/databases/$(database)/documents/hotels/$(hotelId)).data.ownerId) || isAdmin();
      }
    }

    match /orders/{orderId} {
      allow read: if isOwner(resource.data.customerId) || isOwner(resource.data.ownerId) || isAdmin();
      // Orders are created server-side by the webhook, not by clients.
      allow create: if false; 
      allow update: if false;
      allow delete: if false;
    }

    match /withdrawals/{withdrawalId} {
      allow read: if isOwner(resource.data.ownerId) || isAdmin();
      allow create: if isHotelOwner() && isOwner(request.resource.data.ownerId);
      // Only an admin can approve or deny a withdrawal request.
      allow update: if isAdmin() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'processedDate']);
      allow delete: if false;
    }
  }
}
