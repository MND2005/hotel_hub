rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    function isAdmin() {
      return request.auth != null && getUserRole(request.auth.uid) == 'admin';
    }

    function isOwner(resourceOwnerId) {
        return request.auth != null && request.auth.uid == resourceOwnerId;
    }
    
    function isHotelOwner(hotelId) {
        let hotelOwnerId = get(/databases/$(database)/documents/hotels/$(hotelId)).data.ownerId;
        return isOwner(hotelOwnerId);
    }

    match /users/{userId} {
      allow get: if isAdmin() || isOwner(userId);
      allow list: if isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /hotels/{hotelId} {
      allow get: if request.auth != null;
      allow list: if request.auth != null;

      allow create: if request.auth != null 
                    && getUserRole(request.auth.uid) == 'owner'
                    && isOwner(request.resource.data.ownerId);

      allow update: if isHotelOwner(hotelId) || isAdmin();
      allow delete: if isHotelOwner(hotelId) || isAdmin();

      match /rooms/{roomId} {
        allow get, list: if request.auth != null;
        allow write: if isHotelOwner(hotelId) || isAdmin();
      }

      match /menuItems/{menuItemId} {
        allow get, list: if request.auth != null;
        allow write: if isHotelOwner(hotelId) || isAdmin();
      }
    }

    match /withdrawals/{withdrawalId} {
      allow get: if isAdmin() || isOwner(get(/databases/$(database)/documents/withdrawals/$(withdrawalId)).data.ownerId);
      allow list: if isAdmin();
      allow create: if getUserRole(request.auth.uid) == 'owner' && isOwner(request.resource.data.ownerId);
      allow update: if isAdmin();
      allow delete: if false;
    }
  }
}