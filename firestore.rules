rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    match /users/{userId} {
      allow get: if request.auth.uid == userId || isAdmin(request.auth.uid);
      allow list: if isAdmin(request.auth.uid);
      allow create: if request.auth.uid == userId;
      allow update: if isAdmin(request.auth.uid);
    }

    match /hotels/{hotelId} {
      allow get: if resource.data.isOpen == true || 
                   (request.auth != null && (resource.data.ownerId == request.auth.uid || isAdmin(request.auth.uid)));
      allow list: if isAdmin(request.auth.uid) || 
                    (request.auth.uid == request.query.filters.ownerId) ||
                    (request.query.filters.isOpen == true);
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow update: if (request.auth != null && request.auth.uid == resource.data.ownerId) || isAdmin(request.auth.uid);

      match /rooms/{roomId} {
        allow read: if true;
        allow create, update, delete: if get(/databases/$(database)/documents/hotels/$(hotelId)).data.ownerId == request.auth.uid;
      }
      
      match /menuItems/{menuItemId} {
        allow read: if true;
        allow create, update, delete: if get(/databases/$(database)/documents/hotels/$(hotelId)).data.ownerId == request.auth.uid;
      }
    }

    match /orders/{orderId} {
      allow get: if isAdmin(request.auth.uid) || 
                   (request.auth != null && (request.auth.uid == resource.data.customerId || request.auth.uid == resource.data.ownerId));
      allow list: if isAdmin(request.auth.uid) ||
                    (request.auth != null && (request.auth.uid == request.query.filters.customerId || request.auth.uid == request.query.filters.ownerId));
      allow create: if request.auth != null;
    }

    match /withdrawals/{withdrawalId} {
        allow create: if request.auth.uid == request.resource.data.ownerId;
        allow get: if request.auth.uid == resource.data.ownerId || isAdmin(request.auth.uid);
        allow list: if isAdmin(request.auth.uid) || (request.auth.uid == request.query.filters.ownerId);
        allow update: if isAdmin(request.auth.uid);
    }
  }
}
