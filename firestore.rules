
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ===== HELPER FUNCTIONS =====
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isRole(role) {
      return isSignedIn() && getUserData(request.auth.uid).role == role;
    }
    
    function isHotelOwner(hotelId) {
        return isSignedIn() && get(/databases/$(database)/documents/hotels/$(hotelId)).data.ownerId == request.auth.uid;
    }

    // ===== USERS =====
    match /users/{userId} {
      allow read: if isOwner(userId) || isRole('admin');
      
      allow create: if isOwner(userId)
                    && request.resource.data.id == userId
                    && request.resource.data.name is string
                    && request.resource.data.email == request.auth.token.email
                    && request.resource.data.role in ['customer', 'owner', 'admin']
                    && request.resource.data.joinedDate is string;
      
      allow update: if isRole('admin'); 
      allow delete: if isRole('admin');
    }

    // ===== HOTELS & SUBCOLLECTIONS =====
    match /hotels/{hotelId} {
      allow read: if resource.data.isOpen == true 
                  || (isSignedIn() && resource.data.ownerId == request.auth.uid) 
                  || isRole('admin');

      allow create: if isSignedIn() 
                    && request.resource.data.ownerId == request.auth.uid;

      allow update: if isHotelOwner(hotelId) || isRole('admin');
      
      allow delete: if isRole('admin');

      // --- ROOMS subcollection ---
      match /rooms/{roomId} {
        allow read: if get(/databases/$(database)/documents/hotels/$(hotelId)).data.isOpen == true 
                    || isHotelOwner(hotelId) 
                    || isRole('admin');
        allow write: if isHotelOwner(hotelId) || isRole('admin');
      }

      // --- MENU ITEMS subcollection ---
      match /menuItems/{menuItemId} {
        allow read: if get(/databases/$(database)/documents/hotels/$(hotelId)).data.isOpen == true 
                    || isHotelOwner(hotelId) 
                    || isRole('admin');
        allow write: if isHotelOwner(hotelId) || isRole('admin');
      }
    }

    // ===== ORDERS =====
    match /orders/{orderId} {
      allow create: if request.resource.data.stripeCheckoutSessionId is string
                    && request.resource.data.customerId is string
                    && request.resource.data.hotelId is string
                    && request.resource.data.ownerId is string;

      allow read: if (isSignedIn() && resource.data.customerId == request.auth.uid) 
                  || (isSignedIn() && resource.data.ownerId == request.auth.uid) 
                  || isRole('admin');

      allow update, delete: if isRole('admin');
    }

    // ===== WITHDRAWALS =====
    match /withdrawals/{withdrawalId} {
      allow create: if isSignedIn() && request.resource.data.ownerId == request.auth.uid;
      
      allow read: if (isSignedIn() && resource.data.ownerId == request.auth.uid) || isRole('admin');
      
      allow update: if isRole('admin');
      
      allow delete: if isRole('admin');
    }
  }
}
