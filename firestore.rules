
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }
    
    match /hotels/{hotelId} {
      // Allow read if hotel is open, or if user is owner or admin
      allow read: if resource.data.isOpen == true 
                   || isAdmin()
                   || (request.auth.uid != null && resource.data.ownerId == request.auth.uid);

      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow update: if request.auth.uid == resource.data.ownerId || isAdmin();
      
      match /rooms/{roomId} {
        allow read: if true;
        allow write, delete: if get(/databases/$(database)/documents/hotels/$(hotelId)).data.ownerId == request.auth.uid || isAdmin();
      }

      match /menuItems/{menuItemId} {
        allow read: if true;
        allow write, delete: if get(/databases/$(database)/documents/hotels/$(hotelId)).data.ownerId == request.auth.uid || isAdmin();
      }
    }
    
    match /orders/{orderId} {
      // IMPORTANT: Orders can ONLY be created by the backend (Stripe webhook) using the Admin SDK.
      // We explicitly deny create access from the client to prevent fraud.
      allow create: if false; 
      
      // Allow read only by the customer who made it, the owner of the hotel, or an admin.
      allow read: if request.auth.uid == resource.data.customerId 
                   || request.auth.uid == resource.data.ownerId
                   || isAdmin();
      
      // No updates or deletes from the client for now.
      allow update, delete: if false;
    }

    match /withdrawals/{withdrawalId} {
        allow read, create: if request.auth.uid == request.resource.data.ownerId || isAdmin();
        allow update: if isAdmin();
    }
  }
}
